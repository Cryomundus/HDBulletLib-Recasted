// ------------------------------
// CREATED BY BOGUS/TARTLMAN
// ------------------------------

const ENC_50OMG = 3.3;
const ENC_50OMG_LOADED = 2.5;

class HDB_50OMG : HDBulletActor
{
	override void HitGeometry(line hitline, sector hitsector, int hitside, int hitpart, vector3 vu, double lastdist)
	{
		A_SprayDecal(speed > 400 ? "BulletChipLarge" : "BulletChip", 4);
		super.HitGeometry(hitline, hitsector, hitside, hitpart, vu, lastdist);
		angle -= 180;
		A_SprayDecal(speed > 400 ? "BulletChipLarge" : "BulletChip", 4);
		angle += 180;
	}

	Default
	{
		PushFactor 0.05;
		Mass 460;
		Speed HDCONST_MPSTODUPT * 840;
		Accuracy 600;
		Stamina 1270;
		WoundHealth 2;
		HDBulletActor.Hardness 4;
		HDBulletActor.DistantSound "world/riflefar";
	}
}

class HD50OMGAmmo : HDRoundAmmo
{
	override void SplitPickup()
	{
		SplitPickupBoxableRound(10, 20, "HD50OMGBoxPickup", "OG10A0", "OGBLA0");
		scale.y = amount == 10 ? (0.8 * 0.83) : 0.8;
	}

	Default
	{
		+FORCEXYBILLBOARD 
		+CANNOTPUSH
		+INVENTORY.IGNORESKILL
		+HDPICKUP.MULTIPICKUP
		XScale 0.7;
		YScale 0.8;
		Inventory.PickupMessage "$PICKUP_50OMG";
		HDPickup.RefId "omg";
		Tag "$TAG_50OMG";
		HDPickup.Bulk ENC_50OMG;
		Inventory.Icon "OG10A0";
	}

	States
	{
		Spawn:
			OGBL A -1;
			OG10 A -1;
	}
}

class HDSpent50OMG : HDDebris
{
	Default
	{
		-noteleport +forcexybillboard
		BounceSound "misc/casing";
		XScale 0.7;
		YScale 0.8;
		BounceFactor 0.6;
	}

	override void postbeginplay() {
		super.postbeginplay();

		if(vel == (0,0,0)) {
			A_ChangeVelocity(0.0001,0,-0.1,CVF_RELATIVE);
		}
	}

	vector3 lastvel;
	override void Tick() {
		if(!isFrozen()) {
			lastvel = vel;
		}

		super.Tick();
	}

	States
	{
		Spawn:
			OGBS A 2
			{
				angle += random(25, 45);
				roll += random(5, 15);
			}
			Loop;
		Death:
			OGBS A -1
			{
				roll = 0;
			}
			Stop;
	}
}

// a .50 OMG that can be caught in hand, launched from the Wyvern
class HDUnSpent50OMG : HDSpent50OMG
{
	states
	{
		spawn:
			OGBL A 2;
			TNT1 A 0
			{
				if (A_JumpIfInTargetInventory("HD50OMGAmmo", 0, "null")) {
					A_SpawnItemEx("HDFumbling50OMG",
						0, 0, 0,
						vel.x + frandom(-1,1), vel.y + frandom(-1,1), vel.z,
						0, SXF_NOCHECKPOSITION|SXF_ABSOLUTEMOMENTUM
					);
				} else {
					A_GiveToTarget("HD50OMGAmmo", 1);
				}
			}
			stop;
	}
}

// any other single .50 OMG tumblng out
class HDFumbling50OMG : HDSpent50OMG
{
	default
	{
		bouncefactor 0.3;
	}

	states
	{
		spawn:
			OGBL A 2;
			loop;
		death:
			TNT1 A 0
			{
				let sss = spawn("HD50OMGAmmo", pos);
				sss.vel.xy = lastvel.xy + lastvel.xy.unit() * abs(lastvel.z);
				sss.setstatelabel("death");
				
				if(sss.vel.x || sss.vel.y) {
					sss.A_FaceMovementDirection();
					sss.angle += 90;
					sss.frame = randompick(0,4);
				} else {
					sss.frame = randompick(0,0,0,4,4,4,2,2,5);
				}
				inventory(sss).amount = 1;
			}stop;
	}
}

class HDLoose50OMG : HDUPK
{
	Default
	{
		+MISSILE
		+HDUPK.MULTIPICKUP
		Height 4;
		Radius 2;
		BounceType "Doom";
		BounceSound "misc/casing";
		XScale 0.7;
		YScale 0.8;
		MaxStepHeight 0.6;
		BounceFactor 0.6;
		HDUPK.PickupType "HD50OMGAmmo";
		HDUPK.PickupMessage "$PICKUP_50OMG";
	}

	States
	{
		Spawn:
			OGBL A 2
			{
				angle += 45;
				if (floorz == pos.z && vel.z == 0)
				{
					A_Countdown();
				}
			}
			Wait;
		Death:
			---- A 1
			{
				Actor a = Spawn("HD50OMGAmmo", pos, ALLOW_REPLACE);
				a.angle = self.angle;
				a.vel = self.vel;
				Destroy();
			}
			Stop;
	}
}

class HD50OMGBoxPickup : HDUPK
{
	Default
	{
		//$Category "Ammo/Hideous Destructor/"
		//$Title "Box of .50 OMG"
		//$Sprite "OGBXA0"
		Scale 0.4;
		HDUPK.Amount 20;
		HDUPK.PickupSound "weapons/pocket";
		HDUPK.PickupMessage "$PICKUP_50OMGBOX";
		HDUPK.PickupType "HD50OMGAmmo";
	}

	States
	{
		Spawn:
			OGBX A -1;
			Stop;
	}
}